package com.saurav.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.mapping.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.saurav.demo.User;
import com.saurav.demo.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo")  // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	private  Session sessionfactory;
	 @GetMapping("/add")
	    public String greetingForm(Model model) {
	        
	  
	    
	       
			
			
			model.addAttribute("user", new User());
			
	        return "index";
	    }

/*	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String food,Model model) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setFood(food);
		userRepository.save(n);
	
		return "Saved";
	}
	
	

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	*/
	 
	 @PostMapping("/add")
	    public  String greetingSubmit(@ModelAttribute User user,Model model) {
		 
			userRepository.save(user);
			
			
		    String list="";
		 
		   //return "result";
		   for (User users: userRepository.findAll()){
			   
			   list += users.toString()+"<br>";
			   
			   
		   };
		   
		   model.addAttribute("list", list);
		   
	
		   
		   return "result";
	    }

}
